launch.json
{
    "version": "0.2.0",
    "configurations": [
      {
        "name": "Run hello.cpp",
        "type": "cppdbg",
        "request": "launch",
        "program": "${workspaceFolder}/hello.exe",
        "args": [],
        "stopAtEntry": false,
        "cwd": "${workspaceFolder}",
        "environment": [],
        "externalConsole": false,
        "MIMode": "gdb",
        "miDebuggerPath": "gdb",
        "preLaunchTask": "build-hello"
      }
    ]
}

settings.json
{
    "C_Cpp.default.compilerPath": "C:/msys64/mingw64/bin/g++.exe",
    "files.associations": {
        "*.c": "c",
        "iostream": "cpp"
    }
}

tasks.json
{
    "version": "2.0.0",
    "tasks": [
      {
        "label": "build-hello",
        "type": "shell",
        "command": "g++",
        "args": [
          "hello.cpp",
          "-o",
          "hello.exe"
        ],
        "group": {
          "kind": "build",
          "isDefault": true
        },
        "problemMatcher": ["$gcc"]
      }
    ]
  }

1. Phạm vi biến: So sánh tổng quát
Loại biến                      | Phạm vi sử dụng              | Thời gian tồn tại                 | Khai báo ở đâu
Biến toàn cục(Global Variable) | Toàn bộ chương trình         | Từ lúc bắt đầu đến khi kết thúc   | Ngoài mọi hàm
Biến cục bộ(Local Variable)    | Trong hàm hoặc khối          | Khi hàm bắt đầu, mất khi kết thúc | Trong hàm
Biến động(Dynamic Variable)    | Bất kỳ đâu thông qua con trỏ | Tùy mình quản lý (phải delete)    | Dùng new và con trỏ

2. Các kiểu dữ liệu
C++ cung cấp nhiều kiểu dữ liệu khác nhau:

    int: Kiểu số nguyên (ví dụ: int a = 5;)
    float: Kiểu số thực với độ chính xác đơn (ví dụ: float b = 5.5;)
    double: Kiểu số thực với độ chính xác gấp đôi (ví dụ: double c = 5.55;)
    char: Kiểu ký tự (ví dụ: char d = 'A';)
    bool: Kiểu logic chỉ có hai giá trị true hoặc false (ví dụ: bool e = true;)

3. Toán tử
Toán tử là các ký hiệu được sử dụng để thực hiện các phép toán. Có các loại toán tử chính:

    Toán tử số học: +, -, *, /, %
    Toán tử so sánh: ==, !=, <, >, <=, >=
    Toán tử logic: &&, ||, !
    Toán tử gán: =, +=, -=, *=, /=, %=

- Kế thừa (Inheritance):cho phép một lớp con (class con) thừa hưởng các thuộc tính và phương thức (hàm) từ một lớp cha (class cha).
Lợi ích của kế thừa:
Tái sử dụng mã (code reuse)

Dễ mở rộng và bảo trì

Giúp xây dựng hệ thống đa hình và phân cấp rõ ràng

- Đa hình là khả năng cho phép một hàm hoặc đối tượng có nhiều hành vi khác nhau, tùy thuộc vào kiểu dữ liệu cụ thể hoặc lớp con đang sử dụng.
- Có 2 loại đa hình trong C++
+) Đa hình biên dịch ( Nạp chồng hàm (Function Overloading) )
+) Đa hình lúc chạy ( Dùng virtual và override ) 
Loại đa hình | Cách đạt được            | Khi xảy ra
Compile-time | Nạp chồng hàm (overload) | Khi biên dịch
Run-time     | virtual + override       | Khi chạy chương trình